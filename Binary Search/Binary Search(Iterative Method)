int binarySearch(int arr[], int n, int target){
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = (low + high) / 2;
        if (target == arr[mid]) 
            return mid;
        else if (target > arr[mid]) 
            low = mid + 1;
        else if (target < arr[mid])
            high = mid - 1;
    }
    return -1;
}


Overflow Case
-> Change Data Type
Use long long for low, high, and mid to accommodate larger values without overflow
-> Modify Calculation
Alternatively, use mid = low + (high - low) / 2 to reduce the risk of overflow during the calculation.
